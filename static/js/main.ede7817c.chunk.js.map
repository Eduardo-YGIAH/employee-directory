{"version":3,"sources":["components/TableSorted.js","components/HeaderBlock.js","components/CardUser.js","components/ErrorModal.js","components/UserDetails.js","index.js"],"names":["TableSorted","state","column","data","props","employees","direction","handleSort","clickedColumn","setState","reverse","_","sortBy","this","Table","sortable","celled","fixed","Header","Row","HeaderCell","sorted","onClick","Body","map","firstName","lastName","jobTitle","startingDate","avatar","id","score","salary","address","phone","email","key","Cell","className","to","Button","basic","color","Component","HeaderBlock","as","block","icon","textAlign","Icon","name","circular","Content","CardUser","Card","Group","Image","floated","size","src","Meta","Description","extra","ErrorModal","Modal","open","content","Actions","inverted","UserDetails","employee","find","match","params","style","marginTop","Array","from","length","v","Faker","image","internet","phoneNumber","streetName","date","between","toDateString","random","number","finance","amount","uuid","ReactDOM","render","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.ede7817c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport _ from 'lodash';\n\nclass TableSorted extends Component {\n  state = {\n    column: null,\n    data: this.props.employees,\n    direction: null,\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      });\n\n      return;\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    });\n  };\n\n  render() {\n    const { column, data, direction } = this.state;\n    return (\n      <Table sortable celled fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Summary Cards - Sort by:</Table.HeaderCell>\n            <Table.HeaderCell sorted={column === 'firstName' ? direction : null} onClick={this.handleSort('firstName')}>\n              First Name\n            </Table.HeaderCell>\n            <Table.HeaderCell sorted={column === 'lastName' ? direction : null} onClick={this.handleSort('lastName')}>\n              Last Name\n            </Table.HeaderCell>\n            <Table.HeaderCell sorted={column === 'jobTitle' ? direction : null} onClick={this.handleSort('jobTitle')}>\n              Job Title\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'startingDate' ? direction : null}\n              onClick={this.handleSort('startingDate')}\n            >\n              Start Date\n            </Table.HeaderCell>\n            <Table.HeaderCell sorted={column === 'score' ? direction : null} onClick={this.handleSort('score')}>\n              Last Eval Score\n            </Table.HeaderCell>\n            <Table.HeaderCell sorted={column === 'salary' ? direction : null} onClick={this.handleSort('salary')}>\n              Salary\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {_.map(\n            data,\n            ({ firstName, lastName, jobTitle, avatar, startingDate, id, score, salary, address, phone, email }) => (\n              <Table.Row key={id}>\n                <Table.Cell>\n                  <div className='ui one buttons'>\n                    <Link to={`/${id}`}>\n                      <Button basic color='green'>\n                        View Details\n                      </Button>\n                    </Link>\n                  </div>\n                </Table.Cell>\n                <Table.Cell>{firstName}</Table.Cell>\n                <Table.Cell>{lastName}</Table.Cell>\n                <Table.Cell>{jobTitle}</Table.Cell>\n                <Table.Cell>{startingDate}</Table.Cell>\n                <Table.Cell>{score}</Table.Cell>\n                <Table.Cell>{salary}</Table.Cell>\n              </Table.Row>\n            ),\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default TableSorted;\n","import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\n\nconst HeaderBlock = () => (\n  <Header as='h2' block icon textAlign='center'>\n    <Icon name='users' circular />\n    <Header.Content>Employees Directory</Header.Content>\n  </Header>\n);\n\nexport default HeaderBlock;\n","import React from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst CardUser = props => {\n  return (\n    <Card.Group>\n      <Card>\n        <Card.Content>\n          <Image floated='right' size='mini' src={props.avatar} />\n          <Card.Header>\n            {props.firstName} {props.lastName}\n          </Card.Header>\n          <Card.Meta>{props.jobTitle}</Card.Meta>\n          <Card.Description>\n            Last evaluation scored: <strong>{props.score} points</strong>\n            <br></br>\n            Started in the company on:\n            <br></br>\n            <strong>{props.startingDate}</strong>\n            <br></br>\n            Salary: <strong>{props.salary}</strong>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Card.Description>\n            Address:\n            <br></br>\n            <strong>{props.address}</strong>\n            <br></br>\n            Phone:\n            <strong>{props.phone}</strong>\n            <br></br>\n            Email:\n            <br></br>\n            <strong>{props.email}</strong>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div className='ui one buttons'>\n            <Link to={'/'}>\n              <Button basic color='green'>\n                Back to List\n              </Button>\n            </Link>\n          </div>\n        </Card.Content>\n      </Card>\n    </Card.Group>\n  );\n};\nexport default CardUser;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\n\nconst ErrorModal = () => (\n  <Modal basic size='small' open={true}>\n    <Header icon='ban' content='Bad Request' />\n    <Modal.Content>\n      <p>You seem to be going to the unknown! Better go back.</p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Link to={'/'}>\n        <Button color='orange' inverted>\n          <Icon name='arrow alternate circle left outline' /> Back to Directory\n        </Button>\n      </Link>\n    </Modal.Actions>\n  </Modal>\n);\n\nexport default ErrorModal;\n","import React from 'react';\nimport CardUser from './CardUser';\nimport ErrorModal from './ErrorModal';\n\nconst UserDetails = props => {\n  let employee = props.employees.find(employee => props.match.params.id === employee.id);\n\n  if (!employee) {\n    return <ErrorModal />;\n  } else {\n    return (\n      <>\n        <div className='ui container centered grid' style={{ marginTop: '10px' }}>\n          <CardUser\n            firstName={employee.firstName}\n            lastName={employee.lastName}\n            jobTitle={employee.jobTitle}\n            avatar={employee.avatar}\n            startingDate={employee.startingDate}\n            score={employee.score}\n            salary={employee.salary}\n            id={employee.id}\n            address={employee.address}\n            phone={employee.phone}\n            email={employee.email}\n          />\n        </div>\n      </>\n    );\n  }\n};\n\nexport default UserDetails;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport TableSorted from './components/TableSorted';\nimport HeaderBlock from './components/HeaderBlock';\nimport UserDetails from './components/UserDetails';\nimport Faker from 'faker';\nimport { uuid } from 'uuidv4';\n\nconst employees = Array.from({ length: 12 }, v => ({\n  avatar: Faker.image.avatar(),\n  firstName: Faker.name.firstName(),\n  lastName: Faker.name.lastName(),\n  jobTitle: Faker.name.jobTitle(),\n  email: Faker.internet.email(),\n  phone: Faker.phone.phoneNumber(),\n  address: Faker.address.streetName(),\n  startingDate: Faker.date.between('01/01/2002', '01/01/2020').toDateString(),\n  score: Faker.random.number(100),\n  salary: Faker.finance.amount(22000, 160000, 2, '£'),\n  id: uuid(),\n}));\n\nfunction App() {\n  return (\n    <>\n      <HeaderBlock />\n      <div className='ui container'>\n        <Router>\n          <Switch>\n            <Route exact path='/:id' render={props => <UserDetails {...props} employees={employees} />} />\n            <Route exact path='/' render={props => <TableSorted {...props} employees={employees} />} />\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}